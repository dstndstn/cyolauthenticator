# top-level http config for websocket headers
# If Upgrade is defined, Connection = upgrade
# If Upgrade is empty, Connection = close
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# HTTP server to redirect all 80 traffic to SSL/HTTPS
server {
    server_name et2022uidaho.ncsa.illinois.edu;
    listen 80;
    # Tell all requests to port 80 to be 302 redirected to HTTPS
    #return 302 https://$host$request_uri;
    # specify the hostname so that using the IP address still works
    return 302 https://et2022uidaho.ncsa.illinois.edu$request_uri;
}
server {
    server_name et2022uidaho.ncsa.illinois.edu;
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/et2022uidaho.ncsa.illinois.edu/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/et2022uidaho.ncsa.illinois.edu/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # Managing literal requests to the JupyterHub front end
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # websocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Scheme $scheme;

        proxy_buffering off;
    }

    # Managing requests to verify letsencrypt host
    location ~ /.well-known {
        allow all;
    }
}
